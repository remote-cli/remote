#!/bin/bash
me=`which $0`
source `dirname $me`/remote-common
if [ -z $1 ]
then
  echo "Usage: remote-init host-name[:remote_dir]"
  exit 1
else
  if [[ "$1" == *:* ]]
  then
    remote_host=`echo $1 | cut -d ":" -f 1`
    remote_directory=`echo $1 | cut -d ":" -f 2`
  else
    remote_host=$1
    remote_directory=`get_remote_init_directory`
  fi
fi
ssh -tqK $remote_host "mkdir -p $remote_directory"
if [ "$?" != 0 ]; then
  echo "Failed to create remote directory $remote_directory on $remote_host."
else
  echo $remote_host:$remote_directory > .remote
  echo "Created remote directory at $remote_host:$remote_directory"

  # help out with .gitignore if we are in a git repository
  if [ -d ".git" ]; then
    # make sure we don't keep adding to .gitignore
    git_ignore_file_name=.gitignore
    grep ".remote\*" $git_ignore_file_name > /dev/null 2>&1
    if [ "$?" != 0 ]; then
      remote_git_ignore_entry=.remote*
      printf "\n$remote_git_ignore_entry\n" >> "$git_ignore_file_name"
      echo "Added $remote_git_ignore_entry to $git_ignore_file_name"
    fi
  fi
  # TODO: help out with svn ignore too

  # check if there is a config directory
  xdg_config_home="${XDG_CONFIG_HOME:-$HOME/.config}"
  config_dir="$xdg_config_home/remote"
  remote_ignore="$config_dir/remoteignore"
  cfg_file="$config_dir/remote.cfg"
  if [ -s "$remote_ignore" ]; then
     touch .remoteignore
     while read -r line
     do
       printf "$line\n" >> .remoteignore
       echo "Added $line to .remoteignore"
     done < $remote_ignore
  fi
  # check if RSHELL is set in remote.cfg
  if [ -s "$cfg_file" ]; then
    rshell=$(grep RSHELL=.* $cfg_file)
    if [ "$?" != 0 ]; then
      echo "No RSHELL setting found in remote.cfg; skipping."
    else
      echo "Setting $rshell for this remote"
      sed -i "" "s/\$/ $rshell/" .remote
    fi
  fi
fi
